package GUI;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Rectangle;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.WindowEvent;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.border.Border;
import javax.swing.text.MaskFormatter;
import os2.Make_Sudoku;
import os2.Operations;
import os2.Point;
import os2.T;
import os2.solveSudoku;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mohamed-A.Radwan
 */
public class Suduku extends javax.swing.JFrame {

    ArrayList<JTextField> FF = new ArrayList<>();
    public ArrayList<ArrayList<Integer>> Elements;
    public ArrayList<ArrayList<JTextField>> JTextElements;
    Operations op = new Operations();
    /**
     * Creates new form Suduku
     */
    public Suduku() throws ParseException {

        initComponents();
        setMinimumSize(new Dimension(1200, 700));
        GridLayout sudukuLay = new GridLayout(3, 3);
        ArrayList<JPanel> Jpanels = new ArrayList<>(9);
        Jpanels.add(Box1);
        Jpanels.add(Box2);
        Jpanels.add(Box3);
        Jpanels.add(Box4);
        Jpanels.add(Box5);
        Jpanels.add(Box6);
        Jpanels.add(Box7);
        Jpanels.add(Box8);
        Jpanels.add(Box9);
        for (int i = 0; i < Jpanels.size(); i++) {
            Jpanels.get(i).setLayout(sudukuLay);
            for (int j = 0; j < 9; j++) {
                JTextField X = new JFormattedTextField(new MaskFormatter("#"));
                FF.add(X);
             //   X.setText(null);
                X.setEditable(true);
                X.setFont(new Font("Monospaced", Font.BOLD, 30));
                X.setHorizontalAlignment(JTextField.CENTER);
                Jpanels.get(i).add(X);
            }
        }

        Border border = BorderFactory.createLineBorder(Color.black, 4);
        GamePan.setLayout(sudukuLay);
        for (JPanel jpanel : Jpanels) {
            jpanel.setBorder(border);
            //jpanel.setSize(200,200);
            jpanel.setVisible(true);
            GamePan.add(jpanel);
        }
        Rectangle Dem = getBounds();
        int width = (int) (Dem.width / 13.5);
        int height = (int) (Dem.height / 3.5);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Background.setSize(Dem.width, Dem.height);
        jPanel1.setLocation(width, height);
        GamePan.setLocation(width + 500, height - 120);
        // GamePan.setSize(300, 300);
        jPanel4.setLocation(width - 20, height - 150);
        addComponentListener(new ComponentListener() {
            @Override
            public void componentResized(ComponentEvent e) {
                Rectangle Dem = getBounds();
                //jLabel1.setSize(Dem.width,Dem.height);
                int width = (int) (Dem.width / 14.5);
                int height = (int) (Dem.height / 3.5);
                Background.setSize(Dem.width, Dem.height);
                jPanel1.setLocation(width, height);
                jPanel4.setLocation(width - 20, height - 150);
                GamePan.setLocation(width + 500, height - 120);
                ErrorMessage.setSize(400, 200);
                // do stuff           
            }

            @Override
            public void componentMoved(ComponentEvent ce) {
            }

            @Override
            public void componentShown(ComponentEvent ce) {
            }

            @Override
            public void componentHidden(ComponentEvent ce) {
            }
        });
         Choose.pack();
         Game_Deffcuilt.setOpaque(false);
         Choose.setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Choose = new javax.swing.JFrame();
        Game_Deffcuilt = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        ExtremEasy = new javax.swing.JButton();
        Easy = new javax.swing.JButton();
        Meduim = new javax.swing.JButton();
        Hard = new javax.swing.JButton();
        Evil = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        solveIt = new javax.swing.JButton();
        ExitBtn = new javax.swing.JButton();
        ClearBtn = new javax.swing.JButton();
        CheckBtn = new javax.swing.JButton();
        PlayBtn = new javax.swing.JButton();
        GamePan = new javax.swing.JPanel();
        Box1 = new javax.swing.JPanel();
        Box2 = new javax.swing.JPanel();
        Box3 = new javax.swing.JPanel();
        Box4 = new javax.swing.JPanel();
        Box5 = new javax.swing.JPanel();
        Box6 = new javax.swing.JPanel();
        Box7 = new javax.swing.JPanel();
        Box8 = new javax.swing.JPanel();
        Box9 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        ErrorMessage = new javax.swing.JLabel();
        Background = new javax.swing.JLabel();

        Choose.setForeground(java.awt.Color.darkGray);
        Choose.setMinimumSize(new java.awt.Dimension(450, 170));
        Choose.setPreferredSize(new java.awt.Dimension(470, 180));
        Choose.setResizable(false);
        Choose.getContentPane().setLayout(null);

        Game_Deffcuilt.setBorder(new javax.swing.border.MatteBorder(null));
        Game_Deffcuilt.setForeground(new java.awt.Color(82, 184, 218));
        Game_Deffcuilt.setRequestFocusEnabled(false);

        jLabel1.setFont(new java.awt.Font("Chiller", 0, 36)); // NOI18N
        jLabel1.setForeground(java.awt.Color.black);
        jLabel1.setText("Choose Game Deffcuilt");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ExtremEasy.setText("Extrem Easy");
        ExtremEasy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExtremEasyActionPerformed(evt);
            }
        });

        Easy.setText("Easy");
        Easy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EasyActionPerformed(evt);
            }
        });

        Meduim.setText("Meduim");
        Meduim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MeduimActionPerformed(evt);
            }
        });

        Hard.setText("Hard");
        Hard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HardActionPerformed(evt);
            }
        });

        Evil.setText("Evil");
        Evil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EvilActionPerformed(evt);
            }
        });

        Cancel.setBackground(new java.awt.Color(140, 33, 33));
        Cancel.setForeground(java.awt.Color.white);
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Game_DeffcuiltLayout = new javax.swing.GroupLayout(Game_Deffcuilt);
        Game_Deffcuilt.setLayout(Game_DeffcuiltLayout);
        Game_DeffcuiltLayout.setHorizontalGroup(
            Game_DeffcuiltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Game_DeffcuiltLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Game_DeffcuiltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExtremEasy, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Hard, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Game_DeffcuiltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Evil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Easy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Game_DeffcuiltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Meduim, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                    .addComponent(Cancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(Game_DeffcuiltLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addComponent(jLabel1)
                .addContainerGap(116, Short.MAX_VALUE))
        );
        Game_DeffcuiltLayout.setVerticalGroup(
            Game_DeffcuiltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Game_DeffcuiltLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(Game_DeffcuiltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Easy)
                    .addComponent(ExtremEasy)
                    .addComponent(Meduim))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(Game_DeffcuiltLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Hard)
                    .addComponent(Evil)
                    .addComponent(Cancel))
                .addGap(20, 20, 20))
        );

        Choose.getContentPane().add(Game_Deffcuilt);
        Game_Deffcuilt.setBounds(4, 0, 450, 170);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/OS6Fgxs.jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        Choose.getContentPane().add(jLabel2);
        jLabel2.setBounds(0, 0, 500, 210);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setOpaque(false);

        solveIt.setBackground(new java.awt.Color(159, 181, 101));
        solveIt.setFont(new java.awt.Font("Chiller", 1, 40)); // NOI18N
        solveIt.setForeground(new java.awt.Color(239, 28, 28));
        solveIt.setText("Solve IT !");
        solveIt.setSelected(true);
        solveIt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                solveItActionPerformed(evt);
            }
        });

        ExitBtn.setBackground(new java.awt.Color(159, 181, 101));
        ExitBtn.setFont(new java.awt.Font("Chiller", 1, 40)); // NOI18N
        ExitBtn.setForeground(new java.awt.Color(239, 28, 28));
        ExitBtn.setText("Exit");
        ExitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitBtnActionPerformed(evt);
            }
        });

        ClearBtn.setBackground(new java.awt.Color(159, 181, 101));
        ClearBtn.setFont(new java.awt.Font("Chiller", 1, 40)); // NOI18N
        ClearBtn.setForeground(new java.awt.Color(239, 28, 28));
        ClearBtn.setText("Clear");
        ClearBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClearBtnActionPerformed(evt);
            }
        });

        CheckBtn.setBackground(new java.awt.Color(159, 181, 101));
        CheckBtn.setFont(new java.awt.Font("Chiller", 1, 40)); // NOI18N
        CheckBtn.setForeground(new java.awt.Color(239, 28, 28));
        CheckBtn.setText("Check");
        CheckBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckBtnActionPerformed(evt);
            }
        });

        PlayBtn.setBackground(new java.awt.Color(159, 181, 101));
        PlayBtn.setFont(new java.awt.Font("Chiller", 1, 40)); // NOI18N
        PlayBtn.setForeground(new java.awt.Color(239, 28, 28));
        PlayBtn.setText("Play");
        PlayBtn.setSelected(true);
        PlayBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PlayBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CheckBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(solveIt, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PlayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(PlayBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(solveIt, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CheckBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ClearBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ExitBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);
        jPanel1.setBounds(30, 130, 240, 440);

        GamePan.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        GamePan.setOpaque(false);

        javax.swing.GroupLayout Box1Layout = new javax.swing.GroupLayout(Box1);
        Box1.setLayout(Box1Layout);
        Box1Layout.setHorizontalGroup(
            Box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box1Layout.setVerticalGroup(
            Box1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box2Layout = new javax.swing.GroupLayout(Box2);
        Box2.setLayout(Box2Layout);
        Box2Layout.setHorizontalGroup(
            Box2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box2Layout.setVerticalGroup(
            Box2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box3Layout = new javax.swing.GroupLayout(Box3);
        Box3.setLayout(Box3Layout);
        Box3Layout.setHorizontalGroup(
            Box3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box3Layout.setVerticalGroup(
            Box3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box4Layout = new javax.swing.GroupLayout(Box4);
        Box4.setLayout(Box4Layout);
        Box4Layout.setHorizontalGroup(
            Box4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box4Layout.setVerticalGroup(
            Box4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box5Layout = new javax.swing.GroupLayout(Box5);
        Box5.setLayout(Box5Layout);
        Box5Layout.setHorizontalGroup(
            Box5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box5Layout.setVerticalGroup(
            Box5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box6Layout = new javax.swing.GroupLayout(Box6);
        Box6.setLayout(Box6Layout);
        Box6Layout.setHorizontalGroup(
            Box6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 382, Short.MAX_VALUE)
        );
        Box6Layout.setVerticalGroup(
            Box6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 210, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box7Layout = new javax.swing.GroupLayout(Box7);
        Box7.setLayout(Box7Layout);
        Box7Layout.setHorizontalGroup(
            Box7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box7Layout.setVerticalGroup(
            Box7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box8Layout = new javax.swing.GroupLayout(Box8);
        Box8.setLayout(Box8Layout);
        Box8Layout.setHorizontalGroup(
            Box8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box8Layout.setVerticalGroup(
            Box8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout Box9Layout = new javax.swing.GroupLayout(Box9);
        Box9.setLayout(Box9Layout);
        Box9Layout.setHorizontalGroup(
            Box9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        Box9Layout.setVerticalGroup(
            Box9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout GamePanLayout = new javax.swing.GroupLayout(GamePan);
        GamePan.setLayout(GamePanLayout);
        GamePanLayout.setHorizontalGroup(
            GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GamePanLayout.createSequentialGroup()
                .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GamePanLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Box5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(Box6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GamePanLayout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(Box8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(Box7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(309, Short.MAX_VALUE))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(688, 688, 688)
                    .addComponent(Box9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(101, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(688, 688, 688)
                    .addComponent(Box4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(101, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(707, 707, 707)
                    .addComponent(Box3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(82, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(777, 777, 777)
                    .addComponent(Box2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(777, 777, 777)
                    .addComponent(Box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        GamePanLayout.setVerticalGroup(
            GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(GamePanLayout.createSequentialGroup()
                .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GamePanLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Box5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GamePanLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(Box6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(GamePanLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(Box7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(GamePanLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(Box8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(972, 972, 972)
                    .addComponent(Box9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(65, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(972, 972, 972)
                    .addComponent(Box4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(65, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(1026, 1026, 1026)
                    .addComponent(Box3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(1026, 1026, 1026)
                    .addComponent(Box2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(GamePanLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(GamePanLayout.createSequentialGroup()
                    .addGap(1026, 1026, 1026)
                    .addComponent(Box1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        getContentPane().add(GamePan);
        GamePan.setBounds(438, 61, 516, 561);

        jPanel4.setBackground(new java.awt.Color(255, 0, 102));
        jPanel4.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel4.setOpaque(false);

        ErrorMessage.setFont(new java.awt.Font("Chiller", 1, 50)); // NOI18N
        ErrorMessage.setForeground(new java.awt.Color(239, 28, 28));
        ErrorMessage.setAlignmentY(0.0F);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 428, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(ErrorMessage)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 200, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel4Layout.createSequentialGroup()
                    .addComponent(ErrorMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(jPanel4);
        jPanel4.setBounds(0, 10, 430, 202);

        Background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/OS6Fgxs.jpg"))); // NOI18N
        getContentPane().add(Background);
        Background.setBounds(0, 0, 1190, 740);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ExitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitBtnActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitBtnActionPerformed

    private void ClearBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClearBtnActionPerformed
        for (int i = 0; i < FF.size(); i++) {
            FF.get(i).setText(null);
            FF.get(i).setBackground(Color.white);
            FF.get(i).setEditable(true);
        }
        Elements = new ArrayList<>();
        ErrorMessage.setText("");
        this.repaint();
    }//GEN-LAST:event_ClearBtnActionPerformed
    private void solveItActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_solveItActionPerformed
        if (ConvertSudokuToArrayList(true)) {
            boolean flage = true;
            int[][] sudoku = new int[9][9];
           solveSudoku solve = new solveSudoku();
            if (flage && solve.SolveSudoku()) {
                op.undoMakeRowsToInteger(Operations.Rows);
                 Elements=op.sudoku;
                 int counter = 0;
                    for (int i = 0; i < 9; i++) {
                        for (int j = 0; j < 9; j++) {
                            FF.get(counter).setText(String.valueOf(Elements.get(i).get(j)));
                            counter++;
                        }
                    }
            } else {
                if(!flage)
                {
                    ErrorMessage.setText("An number Dublicated\n"); 
                }
                else ErrorMessage.setText("This IS Invalid Sudoku\n");
                 
            }
             int counter = 0;String s="";
                   for (int i = 0; i < 9; i++) {
                        for (int j = 0; j < 9; j++) {
                           s=String.valueOf(Elements.get(i).get(j));
                            if(!s.equals("0"))
                                  FF.get(counter).setText(s);
                            else  FF.get(counter).setText("");
                           
                            counter++;
                        }
                    }
        } else {
            if(!JTextElements.isEmpty())
            {
                 JTextElements= op.undoMakeRowsToJtext(JTextElements);              
                 int counter = 0;String s="";
                   for (int i = 0; i < 9; i++) {
                        for (int j = 0; j < 9; j++) {
                            if(!JTextElements.get(i).get(j).getText().equals("0"))
                                  FF.set(counter,JTextElements.get(i).get(j));
                            else  FF.get(counter).setText("");
                           
                            counter++;
                        }
                    }
            }
            
            ErrorMessage.setText("This 1 IS Invalid Sudoku");
        }
       
    }//GEN-LAST:event_solveItActionPerformed

    private void CheckBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckBtnActionPerformed
        int num;
        Elements = new ArrayList<>(9);
        if (ConvertSudokuToArrayList(false)) {
            boolean row = false;
            boolean column = false;
            boolean[] B = new boolean[9];
            T thread1 = new T(Operations.Rows, 1);
            T thread2 = new T(Operations.Cols, 1);
            thread1.start();
            thread2.start();
            ArrayList<T> t = new ArrayList();
            for (int i = 0; i < Elements.size(); i++) {
                T tt = new T(Elements.get(i));
                tt.start();
                t.add(tt);
            }
            try {
                thread1.join();
                thread2.join();
                row = thread1.flag;
                column = thread2.flag;
                for (int i = 0; i < t.size(); i++) {
                    t.get(i).join();
                }
                for (int i = 0; i < t.size(); i++) {
                    B[i] = t.get(i).flag;
                }
                int che = 0;
                for (int i = 0; i < B.length; i++) {
                    if (B[i] == false) {
                        che = 1;
                    }
                }
                if (row && column && che == 0) {
                    ErrorMessage.setText("TRUE");
                } else {
                    ErrorMessage.setText("FALSE");
                }
            } catch (InterruptedException ex) {
                Logger.getLogger(Suduku.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            ErrorMessage.setText("Invalid");
        }
    }//GEN-LAST:event_CheckBtnActionPerformed

    private void PlayBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PlayBtnActionPerformed

         Choose.setVisible(true); 

        

    }//GEN-LAST:event_PlayBtnActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        Choose.dispatchEvent(new WindowEvent(Choose, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_CancelActionPerformed

    private void EvilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EvilActionPerformed
        // TODO add your handling code here:
        Play(5);
        Choose.dispatchEvent(new WindowEvent(Choose, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_EvilActionPerformed

    private void HardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HardActionPerformed
        // TODO add your handling code here:
        Play(4);
        Choose.dispatchEvent(new WindowEvent(Choose, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_HardActionPerformed

    private void MeduimActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MeduimActionPerformed
        // TODO add your handling code here:
        Play(3);
        Choose.dispatchEvent(new WindowEvent(Choose, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_MeduimActionPerformed

    private void EasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EasyActionPerformed
        // TODO add your handling code here:
        Play(2);
        Choose.dispatchEvent(new WindowEvent(Choose, WindowEvent.WINDOW_CLOSING));
    }//GEN-LAST:event_EasyActionPerformed

    private void ExtremEasyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExtremEasyActionPerformed
        // TODO add your handling code here:
        Play(1);
        Choose.dispatchEvent(new WindowEvent(Choose, WindowEvent.WINDOW_CLOSING));

    }//GEN-LAST:event_ExtremEasyActionPerformed
    public ArrayList<ArrayList<Integer>> GetElement() {
        return Elements;
    }

    public boolean ConvertSudokuToArrayList(boolean flage) {
        int num;
        Elements = new ArrayList<>(9);
        JTextElements=new ArrayList<>();
        boolean flag = true;
        for (JTextField FF1 : FF) {
            try {
                num = Integer.parseInt(FF1.getText());
                if (num > 9 || num < 0) {
                    FF1.setBackground(Color.red);
                    flag = false;
                }
            } catch (Exception E) {
                if (FF1.getText().equals(" ") && flage) {
                    FF1.setText("0");
                } else {
                    FF1.setBackground(Color.red);
                    flag = false;
                }
            }
        }
        if (flag) {
            int Counter = 0;
             ErrorMessage.setText("");
            for (int i = 0; i < 9; i++) {
              ArrayList<JTextField> A = new ArrayList<>(9);
                for (int j = 0; j < 9; j++) {

                    A.add(FF.get(Counter));
                    Counter++;
                }
                JTextElements.add(A);
            }
            JTextElements=op.MakeRowsJText(JTextElements);
            if(op.Repated(JTextElements))
            {
                return false;
            }
            Counter=0;
            for (int i = 0; i < 9; i++) {
              ArrayList<Integer> A = new ArrayList<>(9);
                for (int j = 0; j < 9; j++) {

                    A.add(Integer.parseInt(FF.get(Counter).getText()));
                    Counter++;
                }
                Elements.add(A);
            }
            operation();
        }
        return flag;
    }

    public void operation() {
        op.SetElements(Elements);
        op.MakeCol();
        op.MakeRows();
    }
    
    private void Play(int Difficult)
    {
        
      Make_Sudoku make=new Make_Sudoku();
      int [][] sudoku= make.diff_gen(Difficult);
      ArrayList<ArrayList<Integer>>Lists=new ArrayList<>();
      ArrayList<Integer> List;
      int size=sudoku.length;
      Operations op=new Operations();
      for(int i=0;i<size;i++)
      {
          List=new ArrayList<>();
          for(int j=0;j<size;j++)
          {
              List.add(sudoku[i][j]);
          }
          Lists.add(List);
      }
      op.undoMakeRowsToInteger(Lists);
      String s;
      int counter=0;
      for (int i = 0; i < 9; i++) {
        for (int j = 0; j < 9; j++) {
           s=String.valueOf(op.sudoku.get(i).get(j));
            if(!s.equals("0"))
            {     FF.get(counter).setText(s);
                  FF.get(counter).setEditable(false);
                  FF.get(counter).setBackground(Color.gray);
            }
            else
            {
                  FF.get(counter).setText("");
                  FF.get(counter).setBackground(Color.WHITE);
                  FF.get(counter).setEditable(true);
            }

            counter++;
        }
            }
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Background;
    private javax.swing.JPanel Box1;
    private javax.swing.JPanel Box2;
    private javax.swing.JPanel Box3;
    private javax.swing.JPanel Box4;
    private javax.swing.JPanel Box5;
    private javax.swing.JPanel Box6;
    private javax.swing.JPanel Box7;
    private javax.swing.JPanel Box8;
    private javax.swing.JPanel Box9;
    private javax.swing.JButton Cancel;
    private javax.swing.JButton CheckBtn;
    private javax.swing.JFrame Choose;
    private javax.swing.JButton ClearBtn;
    private javax.swing.JButton Easy;
    private javax.swing.JLabel ErrorMessage;
    private javax.swing.JButton Evil;
    private javax.swing.JButton ExitBtn;
    private javax.swing.JButton ExtremEasy;
    private javax.swing.JPanel GamePan;
    private javax.swing.JPanel Game_Deffcuilt;
    private javax.swing.JButton Hard;
    private javax.swing.JButton Meduim;
    private javax.swing.JButton PlayBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton solveIt;
    // End of variables declaration//GEN-END:variables
}
